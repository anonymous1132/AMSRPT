@model AMS.CIM.Caojin.RPTWebApp.Models.ReqRpt020MainViewModel
@{
    ViewBag.Title = "Equipment Performance Review";
    Layout = "~/Views/Shared/_LayoutRptBootStrap.cshtml";
}


<link href="~/Content/plugins/chosen/bootstrap-chosen.css" rel="stylesheet">
<link href="~/Content/plugins/summernote/summernote.css" rel="stylesheet">
<link href="~/Content/plugins/summernote/summernote-bs3.css" rel="stylesheet">
<link href="~/Content/plugins/toastr/toastr.min.css" rel="stylesheet">
<link href="~/Content/animate.css" rel="stylesheet">
<link href="~/Content/style.css" rel="stylesheet">
<link href="~/Content/plugins/dualListbox/bootstrap-duallistbox.min.css" rel="stylesheet">
<link href="~/Content/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css" rel="stylesheet">
<link href="~/Content/plugins/dataTables/datatables.min.css" rel="stylesheet">
<!-- Chosen -->
<script src="~/Scripts/plugins/chosen/chosen.jquery.js"></script>
<!-- Dual Listbox -->
<script src="~/Scripts/plugins/dualListbox/jquery.bootstrap-duallistbox.js"></script>
<script src="~/Scripts/ams.commontool.js"></script>
<script src="~/Scripts/vue.min.js"></script>
<!-- SUMMERNOTE -->
<script src="~/Scripts/plugins/summernote/summernote.min.js"></script>


<style>
    .bootstrap-duallistbox-container label {
        font-weight: 400;
        font-size: 13px;
        font-family: "open sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    }

    .info-container {
        display: none;
    }

    .radio label {
        min-width: 150px;
    }

    .input-group {
        width: 100%;
    }

        .input-group label {
            width: 64px;
            border: none;
        }

        .input-group input {
            max-width: 200px;
        }

    .multi-select {
        max-width: 300px;
    }

    #myModal4 .modal-dialog {
        min-width: 80%;
        min-height: 600px;
    }

    #myModal4 .note-toolbar {
        display: none;
    }

    .itemtool {
        float: right;
    }

    .loading {
        display: none;
        position: absolute;
        top: 48%;
        left: 48%;
    }

    #table-div {
        max-height: 450px;
    }
</style>

<div class="row white-bg border-bottom ">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>查询条件</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-lg-3">
                        <label class="font-normal">Modules：</label><br />
                        <div style="width:270px">
                            <select id="selected-modules" data-placeholder="请选择Modules，不选视为全选" class="chosen-select" multiple>
                                @foreach (var item in Model.Modules)
                                {
                                    <option value="@item.Key">@item.Value</option>
                                }
                            </select>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="radio">
                                    <input type="radio" name="radio1" id="radio1" value="date" checked>
                                    <label for="radio1">
                                        By Date
                                    </label>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="radio">
                                    <input type="radio" name="radio1" id="radio2" value="week">
                                    <label for="radio2">
                                        By Week
                                    </label>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="radio">
                                    <input type="radio" name="radio1" id="radio3" value="month">
                                    <label for="radio3">
                                        By Month
                                    </label>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div style="width:100%" id="DateRangeControl">
                            <div class="input-daterange input-group">
                                <label class="font-normal input-group-addon">From:</label>
                                <input v-bind:type="type" class="input-sm form-control" name="start" id="start-date" v-model="startValue" />
                            </div>
                            <div class=" input-daterange input-group">
                                <label class="font-normal input-group-addon">To:</label>
                                <input v-bind:type="type" class="input-sm form-control" name="end" id="end-date" v-model="endValue" />
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="multi-select">
                            <select class="dual_select" multiple id="select-eqptypes">
                                @foreach (var item in Model.EqpTypes)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-sm-2 " style="margin-top:5px">
                        <br />
                        <p>
                            <button type="button" class="btn btn-outline btn-primary" style="width:120px" onclick="Query()">Query</button>
                        </p>
                        <br />
                        <p>
                            <button type="button" class="btn btn-outline btn-primary" style="width:120px" data-toggle="modal" data-target="#myModal4">Import Data</button>
                        </p>
                        <br />
                        <p>
                            <button type="button" class="btn btn-outline btn-primary" style="width:120px" data-toggle="modal" data-target="#myModal2">Formula Def.</button>
                        </p>
                    </div>

                    <div class="modal inmodal" id="myModal2" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content animated flipInY">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                    <h4 class="modal-title">Formula Def.</h4>
                                </div>
                                <div class="modal-body">
                                    <p>
                                        <strong>-UPm(Actual):</strong>sum(PR+SB)/sum(PR+SB+EN+SD+ND)<br />
                                        <strong>-UUm(Actual):</strong>sum(PR)/sum(PR+SB)<br />
                                        <i>If EQP Type="T%"/"EA%"/"EE%"/"DC%"/"DR%"/"DF%"/"CS%"/"CC%" from d_tr25_data@pms300,others from EQ_RUN_IDLE_DOWN_DETAIL@pms300<br /></i>
                                        <strong>-Passqty(Actual):</strong>sum(PASSQTY)<br />
                                        <strong>-Rework Rate(Actual):</strong>sum(REWKQTY)/sum(PASSQTY)<br />
                                        <strong>-Eff.Move(Actual):</strong>sum(PASSQTY)-sum(REWKQTY)<br />
                                        <strong>-Throughput(Move/run hr.):</strong>sum(PASSQTY)/sum(PR)<br />
                                        <i>* WPH is continuously-run throughput per hour(out-out).<br />* Move/run hr. is actual moves per hour.<br /></i>
                                        REWKQTY from REWKMT@house300 and hold code exclude(RWP39),PASSQTY from PASSQTY_BY_SHIFT@house300,
                                    </p>
                                    <p>PS. 以上Index皆成立于CR21N('PROD','DIT','FIT')And LOTTYPE IN ('P','AB','TP','TB','EP','EB','SP','SB')</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-white" data-dismiss="modal">关闭</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal inmodal " id="myModal4" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content animated fadeIn">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                    <h4 class="modal-title">Set Eqp Performance Target</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-lg-12">
                                            <div class="ibox float-e-margins">
                                                <div class="ibox-title">
                                                    <h5>Target Edit Region</h5>
                                                    <div class="itemtool">
                                                        <a href="#" onclick="DownLoadDemoFile(); return false;" data-toggle="tooltip" data-placement="left" title="下载Excel Demo File" class="excel"><span><img src="~/themes/icons/excel_2007.gif"></span></a>
                                                    </div>
                                                </div>
                                                <div class="ibox-content no-padding" id="summerView">
                                                    <div class="summernote" id="summernote" ref="summernote">
                                                      
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-white" data-dismiss="modal">关闭</button>
                                    <button type="button" class="btn btn-primary" id="submit">提交</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3" style="float:right">
                        <br /><p style="font-weight:200"><small>开发者：曹晋（0279）<br />需求者：蔡郁达（0093）</small></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-lg-12">
    <div class="ibox float-e-margins" id="table-view" v-bind:style="{display:display}">
        <div class="ibox-title">
            <div class="html5buttons"><div class="dt-buttons btn-group"><a class="btn btn-default buttons-excel buttons-html5" tabindex="0" aria-controls="DataTables_Table_0" href="#" onclick="tableToExcel('DataTables_Table_0','sheet1','EqpPerformanceReview','dlink'); return false;"><span><img src="~/themes/icons/excel_2007.gif" /></span></a> <a id="dlink" style="display: none;"></a></div></div>
            <p>Query Conditions:{{ Conditions }}</p>
        </div>

        <div class="ibox-content">
            <div class="table-responsive" id="table-div">
                <div id="DataTables_Table_0_wrapper" class="dataTables_wrapper form-inline dt-bootstrap">
                    <table class="table table-striped table-bordered table-hover dataTables-example" id="DataTables_Table_0">
                        <thead>
                            <tr>
                                <th rowspan="2" colspan="15">Equipment Performance Review</th>
                                <th colspan="2">Start Date</th>
                                <th colspan="2" v-text="StartDate"></th>
                            </tr>
                            <tr>
                                <th colspan="2">End Date</th>
                                <th colspan="2" v-text="EndDate"></th>
                            </tr>
                            <tr>
                                <th>Index</th>
                                <th colspan="3">UPM(%)</th>
                                <th colspan="3">UUM(%)</th>
                                <th colspan="3">Move(pcs/day)</th>
                                <th colspan="3">Rework rate(%)</th>
                                <th colspan="3">Eff.Move(pcs/day)</th>
                                <th colspan="3">Throughput(pcs/hr)</th>
                            </tr>
                            <tr>
                                <th>EQPTYPE</th>
                                <th>Target</th>
                                <th>Actual</th>
                                <th>Delta</th>
                                <th>Target</th>
                                <th>Actual</th>
                                <th>Delta</th>
                                <th>Target</th>
                                <th>Actual</th>
                                <th>Delta</th>
                                <th>Target</th>
                                <th>Actual</th>
                                <th>Delta</th>
                                <th>Target</th>
                                <th>Actual</th>
                                <th>Delta</th>
                                <th>WPH</th>
                                <th>Move/Run hr.</th>
                                <th>Delta</th>
                            </tr>
                        </thead>
                        <tbody v-for="item in TbodyEntitiesShow">
                            <tr style="background-color:lightcyan" class="gradeA">
                                <td v-text="item.TotalRow.EqpType"></td>
                                <td v-text="item.TotalRow.UpmTarget"></td>
                                <td v-text="item.TotalRow.UpmActual"></td>
                                <td v-text="item.TotalRow.UpmDelta"></td>
                                <td v-text="item.TotalRow.UumTarget"></td>
                                <td v-text="item.TotalRow.UumActual"></td>
                                <td v-text="item.TotalRow.UumDelta"></td>
                                <td v-text="item.TotalRow.PassTarget"></td>
                                <td v-text="item.TotalRow.PassActual"></td>
                                <td v-text="item.TotalRow.PassDelta"></td>
                                <td v-text="item.TotalRow.RwkTarget"></td>
                                <td v-text="item.TotalRow.RwkActual"></td>
                                <td v-text="item.TotalRow.RwkDelta"></td>
                                <td v-text="item.TotalRow.EffTarget"></td>
                                <td v-text="item.TotalRow.EffActual"></td>
                                <td v-text="item.TotalRow.EffDelta"></td>
                                <td v-text="item.TotalRow.ThrTarget"></td>
                                <td v-text="item.TotalRow.ThrActual"></td>
                                <td v-text="item.TotalRow.ThrDelta"></td>
                            </tr>
                            <tr v-for="entity in item.RowEntities" class="gradeX">
                                <td v-text="entity.EqpType"></td>
                                <td v-text="entity.UpmTarget"></td>
                                <td v-text="entity.UpmActual"></td>
                                <td v-text="entity.UpmDelta"></td>
                                <td v-text="entity.UumTarget"></td>
                                <td v-text="entity.UumActual"></td>
                                <td v-text="entity.UumDelta"></td>
                                <td v-text="entity.PassTarget"></td>
                                <td v-text="entity.PassActual"></td>
                                <td v-text="entity.PassDelta"></td>
                                <td v-text="entity.RwkTarget"></td>
                                <td v-text="entity.RwkActual"></td>
                                <td v-text="entity.RwkDelta"></td>
                                <td v-text="entity.EffTarget"></td>
                                <td v-text="entity.EffActual"></td>
                                <td v-text="entity.EffDelta"></td>
                                <td v-text="entity.ThrTarget"></td>
                                <td v-text="entity.ThrActual"></td>
                                <td v-text="entity.ThrDelta"></td>
                            </tr>
                        </tbody>

                    </table>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="hidden">
    <table id="demo-excel">
        <thead>
            <tr>
                <th>EqpType</th>
                <th>UPM(0.xx或xx%)</th>
                <th>UUM(0.xx或xx%)</th>
                <th>Rework(0.xx或xx%)</th>
                <th>Throughput(pcs/hr)</th>
            </tr>
        </thead>
    </table>
</div>
<a id="dlink" style="display: none;"></a>
<div class="loading" id="circle">
    <div class="sk-spinner sk-spinner-circle">
        <div class="sk-circle1 sk-circle"></div>
        <div class="sk-circle2 sk-circle"></div>
        <div class="sk-circle3 sk-circle"></div>
        <div class="sk-circle4 sk-circle"></div>
        <div class="sk-circle5 sk-circle"></div>
        <div class="sk-circle6 sk-circle"></div>
        <div class="sk-circle7 sk-circle"></div>
        <div class="sk-circle8 sk-circle"></div>
        <div class="sk-circle9 sk-circle"></div>
        <div class="sk-circle10 sk-circle"></div>
        <div class="sk-circle11 sk-circle"></div>
        <div class="sk-circle12 sk-circle"></div>
    </div>
</div>


<script>
    var currentYear = new Date().getFullYear();
    var currentMonth = new Date().getMonth() + 1;
    var currentDay = new Date().getDate();
    var currentWeek = getWeekOfYear(new Date());
    var DateRange = new Vue({
        el: '#DateRangeControl',
        data: {
            type: 'date',
            syear: currentYear,
            smonth: currentMonth < 10 ? '0' + currentMonth : currentMonth,
            sweek: currentWeek < 10 ? '0' + currentWeek : currentWeek,
            sday: currentDay < 10 ? '0' + currentDay : currentDay,
            eyear: currentYear,
            emonth: currentMonth < 10 ? '0' + currentMonth : currentMonth,
            eweek: currentWeek < 10 ? '0' + currentWeek : currentWeek,
            eday: currentDay < 10 ? '0' + currentDay : currentDay,
        },
        computed: {
            startValue: {
                get: function () {
                    if (this.type == 'date') {
                        return this.syear + '-' + this.smonth + '-' + this.sday;
                    };
                    if (this.type == 'week') {
                        return this.syear + '-W' + this.sweek;
                    };
                    if (this.type == 'month') {
                        return this.syear + '-' + this.smonth;
                    }
                },
                set: function (svalue) {
                    if (this.type == 'date') {
                        this.syear = svalue.substr(0, 4);
                        this.smonth = svalue.substr(5, 2);
                        this.sday = svalue.substr(8, 2);
                        var week = getWeekOfYear(new Date(this.syear + '-' + this.smonth + '-' + this.sday));
                        this.sweek = week < 10 ? '0' + week : week;
                    };
                    if (this.type == 'week') {
                        this.syear = svalue.substr(0, 4);
                        this.sweek = svalue.substr(6, 2);
                    };
                    if (this.type == 'month') {
                        this.syear = svalue.substr(0, 4);
                        this.smonth = svalue.substr(5, 2);
                    }
                }
            },
            endValue: {
                get: function () {
                    if (this.type == 'date') {
                        return this.eyear + '-' + this.emonth + '-' + this.eday;
                    };
                    if (this.type == 'week') {
                        return this.eyear + '-W' + this.eweek;
                    };
                    if (this.type == 'month') {
                        return this.eyear + '-' + this.emonth;
                    }
                },
                set: function (evalue) {
                    if (this.type == 'date') {
                        this.eyear = evalue.substr(0, 4);
                        this.emonth = evalue.substr(5, 2);
                        this.eday = evalue.substr(8, 2);
                        var week = getWeekOfYear(new Date(this.eyear + '-' + this.emonth + '-' + this.eday));
                        this.eweek = week < 10 ? '0' + week : week;
                    };
                    if (this.type == 'week') {
                        this.eyear = evalue.substr(0, 4);
                        this.eweek = evalue.substr(6, 2);
                    };
                    if (this.type == 'month') {
                        this.eyear = evalue.substr(0, 4);
                        this.emonth = evalue.substr(5, 2);
                    }
                }
            }
        }
    });
    var tableView = new Vue({
        el: '#table-view',
        data: {
            Conditions: '',
            StartDate: '',
            EndDate: '',
            TbodyEntities: ''
        },
        computed: {
            display: function () {
                return this.Conditions ? 'block' : 'none';
            },
            TbodyEntitiesShow: function () {
                var show = JSON.parse(JSON.stringify(this.TbodyEntities));
                //var show = this.TbodyEntities;
                for (var i = 0; i < show.length; i++) {
                    show[i].TotalRow.UpmTarget = toPercent(show[i].TotalRow.UpmTarget);
                    show[i].TotalRow.UpmActual = toPercent(show[i].TotalRow.UpmActual);
                    show[i].TotalRow.UpmDelta = toPercent(show[i].TotalRow.UpmDelta);
                    show[i].TotalRow.UumTarget = toPercent(show[i].TotalRow.UumTarget);
                    show[i].TotalRow.UumActual = toPercent(show[i].TotalRow.UumActual);
                    show[i].TotalRow.UumDelta = toPercent(show[i].TotalRow.UumDelta);
                    show[i].TotalRow.PassDelta = toPercent(show[i].TotalRow.PassDelta);
                    show[i].TotalRow.RwkDelta = toPercent(show[i].TotalRow.RwkDelta);
                    show[i].TotalRow.EffDelta = toPercent(show[i].TotalRow.EffDelta);
                    show[i].TotalRow.ThrDelta = toPercent(show[i].TotalRow.ThrDelta);
                    show[i].TotalRow.ThrActual = show[i].TotalRow.ThrActual.toFixed(2);
                    show[i].TotalRow.ThrTarget = show[i].TotalRow.ThrTarget.toFixed(2);
                    for (var j = 0; j < show[i].RowEntities.length; j++) {
                        show[i].RowEntities[j].UpmTarget = toPercent(show[i].RowEntities[j].UpmTarget);
                        show[i].RowEntities[j].UpmActual = toPercent(show[i].RowEntities[j].UpmActual);
                        show[i].RowEntities[j].UpmDelta = toPercent(show[i].RowEntities[j].UpmDelta);
                        show[i].RowEntities[j].UumTarget = toPercent(show[i].RowEntities[j].UumTarget);
                        show[i].RowEntities[j].UumActual = toPercent(show[i].RowEntities[j].UumActual);
                        show[i].RowEntities[j].UumDelta = toPercent(show[i].RowEntities[j].UumDelta);
                        show[i].RowEntities[j].PassDelta = toPercent(show[i].RowEntities[j].PassDelta);
                        show[i].RowEntities[j].EffDelta = toPercent(show[i].RowEntities[j].EffDelta);
                        show[i].RowEntities[j].RwkDelta = toPercent(show[i].RowEntities[j].RwkDelta);
                        show[i].RowEntities[j].ThrDelta = toPercent(show[i].RowEntities[j].ThrDelta);
                        show[i].RowEntities[j].ThrActual = show[i].RowEntities[j].ThrActual.toFixed(2);
                        show[i].RowEntities[j].ThrTarget = show[i].RowEntities[j].ThrTarget.toFixed(2);
                    }
                }
                return show;
            }
        }
    });

    var summernoteView = new Vue({
        el: '#summerView',
        data: {},
        mounted() {
            $('#summernote').summernote({
                minHeight: 300,
                maxHeight: 700,
                focus: true,
                spellcheck: false,
                placeholder:'  <p>Attention Please：<br />1、请下载本页面提供的Excel Demo File，填写后，将Excel中的内容复制到本页面然后提交。<br />2、同一次提交中重复的EqpType只会Load首次出现的数据。<br />3、DB如果已经存在该EqpType，那么将会更新DB。<br /></p><p> <br /></p>'
            });
        }
    });

    $(document).ready(function () {
        $('.chosen-select').chosen({ width: "100%" });

        $('input[name="radio1"]').change(function () {
            DateRange.type = $(this).val();
        });

        $('#start-date').change(function () {
            DateRange.startValue = $(this).val();
        });
        $('#end-date').change(function () {
            DateRange.endValue = $(this).val();
        });

        $('#submit').click(function () {
            if ($(this).html() == '提交') {
                UploadTarget()
            } else {
                $("#myModal4").modal('hide');  //手动关闭
                $('.summernote').summernote('reset');
                $('#submit').html('提交');
            }
        });

        $('#selected-modules').change(function () {
            GetEqpTypeList();
        });

        $('.dual_select').bootstrapDualListbox({
            selectorMinimalHeight: 160,
            showFilterInputs: false,
            infoText: false,
            nonSelectedListLabel: 'Available EqpType:',
            selectedListLabel: 'Selected EqpType:',
        });

    });

    function Query() {
        $('#circle').css('display', 'block');
        var data = {
            EqpTypes: checkselect("bootstrap-duallistbox-selected-list_"),
            StartDate: $('#start-date').val(),
            EndDate: $('#end-date').val()
        };
        var url = "GetTableView";
        if (data.EqpTypes) {
            PostAjaxGetJson(data, url, function (responsData) {
                tableView.StartDate = responsData.StartDate;
                tableView.EndDate = responsData.EndDate;
                tableView.TbodyEntities = responsData.TbodyEntities;
                tableView.Conditions = responsData.Conditions;
                $('#circle').css('display', 'none');
            }, function () { $('#circle').css('display', 'none'); });
        } else {
            alert("Please Select EqpTypes");
            $('#circle').css('display', 'none');
        }
    }

    function UploadTarget() {
        var text = GetSubmitTableData();
        var tableView = FormTableView(text);
        $('.summernote').summernote('code', tableView);
        var msg;
        PostAjaxGetJson(text, 'SetTargetValue', function (responseData) {
            $('#summernote').summernote('code', tableView + '<br/><div><p>Submit Resaults:</p><p>' + responseData.message + '</p></div>');
        }, function () {
            $('#summernote').summernote('code', tableView + '<br/><div><p>Submit Resaults:</p><p>发生意外错误，设置失败！</p></div>');
        });
        $('#submit').html('确定');
    }

    function DownLoadDemoFile() {
        tableToExcel('demo-excel', 'sheet1', 'EqpPerformanceTagetDemoFile.xls', 'dlink');
    }

    function GetSubmitTableData() {
        var code = $('.summernote').summernote('code');
        var table = $(code).find('tr');
        var data = [];
        for (var i = 0; i < table.length; i++) {
            var row = table[i];
            var rowObj = {
                eqpType: $(row.cells[0]).text(),
                upm: $(row.cells[1]).text(),
                uum: $(row.cells[2]).text(),
                rework: $(row.cells[3]).text(),
                throughput: $(row.cells[4]).text()
            };
            data.push(rowObj);
        }
        return data;
    }

    function FormTableView(data) {
        var summernoteText = '';
        for (var i = 0; i < data.length; i++) {
            summernoteText += '<tr><td>' + data[i].eqpType + '</td><td>' + data[i].upm + '</td><td>' + data[i].uum + '</td><td>' + data[i].rework + '</td><td>' +
                data[i].throughput + '</td></tr>';
        }
        summernoteText = '<table style="border:1px">' + summernoteText + '</table>';
        return summernoteText;
    }

    function initListBox(url, reqeustParams, selectElement, optionValue, optionText, selectedDataStr) {
        $.ajax({
            type: 'POST',//请求方式
            url: url,//地址，就是json文件的请求路径
            data: JSON.stringify({ module: checkselectoption("selected-modules") }),//请求参数
            // async: true,//是否异步
            success: function (data) {
                //var objs = $.parseJSON(data);
                var objs = data;
                var selector = $(selectElement)[0];
                $(objs).each(function () {
                    var o = document.createElement("option");
                    o.value = this[optionValue];
                    o.text = this[optionText];
                    if ("undefined" != typeof (selectedDataStr) && selectedDataStr != "") {
                        var selectedDataArray = selectedDataStr.split(',');
                        $.each(selectedDataArray, function (i, val) {
                            if (o.value == val) {
                                o.selected = 'selected';
                                return false;
                            }
                        });
                    }
                    if (typeof (selector) != "undefined") {
                        selector.options.add(o);
                    }
                });

                //渲染dualListbox
                $(selectElement).bootstrapDualListbox({
                    // moveOnSelect: false,
                    // preserveSelectionOnMove: 'all',
                    selectorMinimalHeight: 160,
                    showFilterInputs: false,
                    infoText: false,
                    nonSelectedListLabel: 'Available EqpType:',
                    selectedListLabel: 'Selected EqpType:',
                });
            },
            error: function (e) {
                alert(e.msg);
            }
        });
    }

    function GetEqpTypeList() {
        var url = "GetEqpTypeByModule";
        var data = { module: checkselectoption("selected-modules") };
        PostAjaxGetHtml(data, url, function (responseData) {
            $('#select-eqptypes').html(responseData);
            $('.dual_select').bootstrapDualListbox('refresh');
        });
    }

    function toPercent(point) {
        var percent = Number(point * 100).toFixed(2);
        percent += "%";
        return percent;
    }
</script>