@model AMS.CIM.Caojin.RPTWebApp.Models.ReqRpt020MainViewModel
@{
    ViewBag.Title = "RTC";
    Layout = "~/Views/Shared/_LayoutRptBootStrap.cshtml";
}

<link href="~/Content/plugins/chosen/bootstrap-chosen.css" rel="stylesheet">
<link href="~/Content/plugins/toastr/toastr.min.css" rel="stylesheet">
<link href="~/Content/animate.css" rel="stylesheet">
<link href="~/Content/style.css" rel="stylesheet">
<link href="~/Content/plugins/dualListbox/bootstrap-duallistbox.min.css" rel="stylesheet">
<link href="~/Content/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css" rel="stylesheet">


<!-- Chosen -->
<script src="~/Scripts/plugins/chosen/chosen.jquery.js"></script>
<!-- Dual Listbox -->
<script src="~/Scripts/plugins/dualListbox/jquery.bootstrap-duallistbox.js"></script>
<script src="~/Scripts/ams.commontool.js"></script>
<script src="~/Scripts/vue.min.js"></script>
<!-- Only For This View-->
<script src="~/Scripts/demo/rtc.js"></script>
<style>
    .bootstrap-duallistbox-container label {
        font-weight: 400;
        font-size: 13px;
        font-family: "open sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    }

    .info-container {
        display: none;
    }

    .radio label {
        min-width: 150px;
    }

    .input-group {
        width: 100%;
    }

        .input-group label {
            width: 64px;
            border: none;
        }

        .input-group input {
            max-width: 200px;
        }

    .multi-select {
        max-width: 300px;
    }

    .itemtool {
        float: right;
    }

    .loading {
        display: none;
        position: absolute;
        top: 48%;
        left: 48%;
    }

    #DataTables_Table_0, #Div_Table_1, #DataTables_Table_2 {
        display: inline-block;
        vertical-align: top;
    }

    #Div_Table_1 {
        max-width: 70%;
        overflow: auto;
        position:relative;
        top:1px;
    }

    #DataTables thead tr th:not(.thDetail) {
        background-color: black;
        color: white;
    }


    #DataTables {
        text-align: center;
        overflow: auto;
        font-size: 0;
        width: 1500px;
        white-space: nowrap;
        max-height: 500px;
    }

        #DataTables * {
            margin: 0;
            padding: 0;
        }

        #DataTables table {
            font-size: 12px;
        }

    #DataTables_Table_0 > thead > tr {
        height: 45px;
    }

        #DataTables_Table_0 > thead > tr > th {
            width: 180px;
        }

    #DataTables_Table_0 .radio {
        width: 100px;
       
    }

    #DataTables_Table_1 {
        border-right-width: 0px;
        border-left-width: 0px;
        border-top-width: 1px;
        border-bottom-width: 1px;
    }

        #DataTables_Table_1 > thead > tr {
            height: 45px;
        }

    #DataTables table > tbody > tr > td {
        height: 25px;
    }

    #DataTables table th {
        text-align: center;
        vertical-align: middle;
    }

    #DataTables_Table_2 .thDetail {
        min-width: 40px;
        text-align: center;
        vertical-align: middle;
        height: 23px;
    }

    .div-chartRate {
        width: 200px;
    }

    #detail-table td {
    text-align:center;
    height:25px;
    }
    #detail-table th {
        text-align: center;
        min-width: 50px;
        height: 25px;
    }

    #history-table th {
        background-color: blue;
        min-width: 40px;
        color: white;
        text-align: center;
        font-weight: normal;
    }

    #history-table td {
        text-align: center;
    }

    #history-table tr {
        height: 25px;
    }


    #myModal .modal-dialog {
        min-width: 80%;
        min-height: 600px;
    }

    #myModal .note-toolbar {
        display: none;
    }
    .modal-table {
        overflow:auto;
        max-height:700px;
        min-height:500px;
    }

    .pr-div {
        background-color:green;
        color:white;
        vertical-align:middle;
        text-align:center;
        height:20px;
        width:55px;
    }
    .sb-div {
        background-color: yellow;
        color: black;
        vertical-align: middle;
        text-align: center;
        height: 20px;
        width: 55px;
    }
    .en-div {
        background-color: blue;
        color: white;
        vertical-align: middle;
        text-align: center;
        height: 20px;
        width: 55px;
    }
    .sd-div {
        background-color: pink;
        color: black;
        vertical-align: middle;
        text-align: center;
        height: 20px;
        width: 55px;
    }
    .ud-div {
        background-color: red;
        color: white;
        vertical-align: middle;
        text-align: center;
        height: 20px;
        width: 55px;
    }
    .ns-div {
        background-color: lightgray;
        color: black;
        vertical-align: middle;
        text-align: center;
        height: 20px;
        width: 55px;
    }
    .pm-div {
        background-color: brown;
        color: white;
        vertical-align: middle;
        text-align: center;
        height: 20px;
        width: 55px;
    }
    .pt-div {
        background-color: purple;
        color: white;
        vertical-align: middle;
        text-align: center;
        height: 20px;
        width: 55px;
    }
    .up-div {
        background-color: skyblue;
        color: black;
        vertical-align: middle;
        text-align: center;
        height: 20px;
        width: 55px;
    }
    .show-later {
    display:none;
    }
</style>

<div class="row white-bg border-bottom ">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>查询条件</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-lg-3">
                        <label class="font-normal">Modules：</label><br />
                        <div style="width:270px">
                            <select id="selected-modules" data-placeholder="请选择Modules，不选视为全选" class="chosen-select" multiple>
                                @foreach (var item in Model.Modules)
                                {
                                    <option value="@item.Key">@item.Value</option>
                                }
                            </select>
                        </div>
                        <br />
                        <div style="width:100%" id="DateRangeControl">
                            <div class="input-daterange input-group">
                                <label class="font-normal input-group-addon">From:</label>
                                <input v-bind:type="type" class="input-sm form-control" name="start" id="start-date" v-model="startValue" />
                            </div>
                            <div class="input-daterange input-group">
                                <label class=" font-normal input-group-addon" style="max-width:64px;margin:0px;padding:0px">
                                    <span class="radio">
                                        <input type="radio" name="radio1" id="radio1" value="date" checked style="padding:0px">
                                        <label for="radio1" style="min-width:40px;margin:0px;width:47px;padding:0px">To:</label>
                                    </span>
                                </label>
                                <input v-bind:type="type" class="input-sm form-control" name="end" id="end-date" v-model="endValue" />
                            </div>
                            <div class="radio">
                                <input type="radio" name="radio1" id="radio2" value="now">
                                <label for="radio2">Now</label>
                            </div>
                            <div class="radio">
                                <input type="radio" name="radio1" id="radio3" value="week">
                                <label for="radio3">Week Query</label>
                            </div>
                        </div>
                        <div class="checkbox ">
                            <input type="checkbox" id="checkbox-chamber">
                            <label for="checkbox-chamber">Chamber</label>
                            <input type="checkbox" id="checkbox-loadport" disabled style="margin-left:10px;position:relative;">
                            <label for="checkbox-loadport">LoadPort</label>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="multi-select">
                            <select class="dual_select" multiple id="select-eqptypes">
                                @foreach (var item in Model.EqpTypes)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-sm-2 " style="margin-top:5px">
                        <br />
                        <p>
                            <button type="button" class="btn btn-outline btn-primary" style="width:120px" onclick="Query()">Query</button>
                        </p>

                        <br />

                        <p class="show-later">
                            <button type="button" class="btn btn-outline btn-primary" style="width:120px" data-toggle="modal" data-target="#myModal" id="detail-btn">Show Detail</button>
                        </p>
                        <br />
                        <p class="show-later" id="scale-control">
                            <label>Scale</label>
                            <select v-model="scale" disabled class=" form-control" style="width:120px">
                                <option value="1">1×</option>
                                <option value="60">60×</option>
                            </select>
                        </p>

                    </div>
                    <div class="modal inmodal" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content animated flipInY">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                    <h4 class="modal-title">Equipment RTC Detail Information</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="ibox float-e-margins" id="table-detail-view">
                                        <div class="ibox-title">
                                            <div class="inline"><p>Equipment RTC Detail {{StartTime}} ~ {{ EndTime }}</p></div>
                                            <div class="inline"><button type="button" class="btn btn-outline btn-primary btn-sm" style="width:80px;height:23px;padding:0" onclick="ExportDetail()">Export</button></div>
                                            <a id="dlink2" style="display: none;"></a>
                                        </div>
                                        <div class="ibox-content" >
                                            <div class="modal-table">
                                                <table id="detail-table" border="1" cellpadding="0" cellspacing="0">
                                                    <thead>
                                                        <tr>
                                                            <th style="min-width:100px">EqpID</th>
                                                            <th style="background-color:green;color:white">PR</th>
                                                            <th  style="background-color:yellow;color:black">SB</th>
                                                            <th style="background-color:blue;color:white">EN</th>
                                                            <th  style="background-color:pink;color:black">SD</th>
                                                            <th style="background-color:red;color:white">UD</th>
                                                            <th  style="background-color:lightgray;color:black">NS</th>
                                                            <th style="background-color:purple;color:white">PT</th>
                                                            <th style="background-color:brown;color:white">PM</th>
                                                            <th style="background-color:skyblue;color:black">UP</th>
                                                            <template v-for="item in DetailTitles">
                                                                <th v-text="item"></th>
                                                            </template>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr v-for="row in Rows">
                                                            <td v-text="row.EqpID"></td>
                                                            <td v-text="row.PR" ></td>
                                                            <td v-text="row.SB"></td>
                                                            <td v-text="row.EN" ></td>
                                                            <td v-text="row.SD"></td>
                                                            <td v-text="row.UD" ></td>
                                                            <td v-text="row.NS"></td>
                                                            <td v-text="row.PT"></td>
                                                            <td v-text="row.PM" ></td>
                                                            <td v-text="row.UP" ></td>
                                                            <template v-for="item in row.detailState">
                                                                <td v-text="item"></td>
                                                            </template>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-white" data-dismiss="modal">关闭</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3" style="float:right" id="fot-info">
                        <p>{{ queryTime }}</p>
                        <p style="font-weight:200"><small>开发者：曹晋（0279）<br />需求者：蔡郁达（0093）</small></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-lg-12">
    <div class="ibox float-e-margins" id="table-view" :style="{display:display}">
        <div class="ibox-title">
            <p>Query Conditions:{{ Conditions }}</p>
        </div>

        <div class="ibox-content">
            <div id="DataTables">
                <table id="DataTables_Table_0" border="1" cellspacing="0" cellpadding="0">
                    <thead>
                        <tr>
                            <th colspan="2" rowspan="2">Eqp CurrentStatus</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="row in RowEntities">
                            <td>
                                <span class="radio">
                                    <input type="radio" name="radioRow" v-bind:id="row.EqpID" :value="row.EqpID" style="padding:0px" />
                                    <label :for="row.EqpID" style="min-width:40px;margin:0px;width:47px;padding:0px" v-text="row.EqpID"></label>
                                </span>
                            </td>
                            <td style="height:25px;width:50px;text-align:center">
                                <div style="height:100%;width:100%">
                                    <div v-if="row.CurState=='PRD'" style="width:100%;height:100%;background-color:green"></div>
                                    <div v-else-if="row.CurState=='SBY'" style="width:100%;height:100%;background-color:yellow"></div>
                                    <div v-else-if="row.CurState=='ENG'" style="width:100%;height:100%;background-color:blue"></div>
                                    <div v-else-if="row.CurState=='SDT'" style="width:100%;height:100%;background-color:pink"></div>
                                    <div v-else-if="row.CurState=='UDT'" style="width:100%;height:100%;background-color:red"></div>
                                    <div v-else-if="row.CurState=='NST'" style="width:100%;height:100%;background-color:lightgray"></div>
                                    <div v-else>Unknown State</div>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <div id="Div_Table_1">
                    <table id="DataTables_Table_1" border="1" cellspacing="0" cellpadding="0">
                        <thead>
                            <tr>
                                <th rowspan="2">
                                    <canvas id="canvas-chartTime" height="40"></canvas>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="row in RowEntities">
                                <td>
                                    <canvas class="canvas-chartTime" height="20"></canvas>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <table id="DataTables_Table_2" border="1" cellspacing="0" cellpadding="0">
                    <thead>
                        <tr>
                            <th rowspan="2" style="height:45px">History Percentage</th>
                            <th colspan="9">History %</th>
                        </tr>
                        <tr>
                            <th style="background-color:green;color:white" class="thDetail">PR</th>
                            <th style="background-color:yellow;color:black" class="thDetail">SB</th>
                            <th style="background-color:blue;color:white" class="thDetail">EN</th>
                            <th style="background-color:pink;color:black" class="thDetail">SD</th>
                            <th style="background-color:red;color:white" class="thDetail">UD</th>
                            <th style="background-color:lightgray;color:black" class="thDetail">NS</th>
                            <th style="background-color:purple;color:white" class="thDetail">PT</th>
                            <th style="background-color:brown;color:white" class="thDetail">PM</th>
                            <th style="background-color:skyblue;color:black" class="thDetail">UP</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="row in RowEntities">
                            <td>
                                <div class="div-chartRate">
                                    <canvas class="canvas-chartRate" height="20" width="200"></canvas>
                                </div>
                            </td>
                            <td v-text="row.PR"></td>
                            <td v-text="row.SB"></td>
                            <td v-text="row.EN"></td>
                            <td v-text="row.SD"></td>
                            <td v-text="row.UD"></td>
                            <td v-text="row.NS"></td>
                            <td v-text="row.PT"></td>
                            <td v-text="row.PM"></td>
                            <td v-text="row.UP"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="col-lg-12">
    <div class="ibox float-e-margins" id="table-history-view" v-bind:style="{display:display}">
        <div class="ibox-title">
            <div class="inline">Equipment:{{ EqpID }}</div>
            <div class="inline">
                <div class="checkbox checkbox-inline pr-div"><input type="checkbox" id="check-pr" value="pr" checked /><label for="check-pr">PR</label></div>
                <div class="checkbox checkbox-inline sb-div"><input type="checkbox" id="check-sb" value="sb" checked /><label for="check-sb">SB</label></div>
                <div class="checkbox checkbox-inline en-div"><input type="checkbox" id="check-en" value="en" checked /><label for="check-en">EN</label></div>
                <div class="checkbox checkbox-inline sd-div"><input type="checkbox" id="check-sd" value="sd" checked /><label for="check-sd">SD</label></div>
                <div class="checkbox checkbox-inline ud-div"><input type="checkbox" id="check-ud" value="ud" checked /><label for="check-ud">UD</label></div>
                <div class="checkbox checkbox-inline ns-div"><input type="checkbox" id="check-ns" value="ns" checked /><label for="check-ns">NS</label></div>
                <div class="checkbox checkbox-inline pt-div"><input type="checkbox" id="check-pt" value="pt" checked /><label for="check-pt">PT</label></div>
                <div class="checkbox checkbox-inline pm-div"><input type="checkbox" id="check-pm" value="pm" checked /><label for="check-pm">PM</label></div>
                <div class="checkbox checkbox-inline up-div"><input type="checkbox" id="check-up" value="up" checked /><label for="check-up">UP</label></div>
            </div>
            <div class="inline">
                <button type="button" class="btn btn-outline btn-primary btn-sm" style="width:80px;height:23px;padding:0" onclick="ExportHistory()">Export</button>
            </div>
            <a id="dlink" style="display: none;"></a>
        </div>
        <div class="ibox-content ">
            <div id="history-div" >
                <table id="history-table" border="1" cellspacing="0" cellpadding="0" style="margin:auto">
                    <thead>
                        <tr>
                            <th>NO</th>
                            <th style="min-width:12px;width:12px;"></th>
                            <th>Status</th>
                            <th>Change Comment</th>
                            <th>Start Time</th>
                            <th>Change User</th>
                            <th>Duration(Hrs)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(row,index) of Rows">
                            <td>{{ index+1 }}</td>
                            <td style="height:25px;width:10px;text-align:center">
                                <div style="height:100%;width:100%">
                                    <div v-if="row.E10State=='PRD'" style="width:100%;height:100%;background-color:green"></div>
                                    <div v-else-if="row.E10State=='SBY'" style="width:100%;height:100%;background-color:yellow"></div>
                                    <div v-else-if="row.E10State=='ENG'" style="width:100%;height:100%;background-color:blue"></div>
                                    <div v-else-if="row.E10State=='SDT'" style="width:100%;height:100%;background-color:pink"></div>
                                    <div v-else-if="row.E10State=='UDT'" style="width:100%;height:100%;background-color:red"></div>
                                    <div v-else-if="row.E10State=='NST'" style="width:100%;height:100%;background-color:lightgray"></div>
                                    <div v-else>Unknown State</div>
                                </div>
                            </td>
                            <td v-text="row.E10WithEqpState"></td>
                            <td v-text="row.Claim_Memo"></td>
                            <td v-text="row.StartTime"></td>
                            <td v-text="row.Claim_User_ID"></td>
                            <td v-text="row.Duration"></td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
    </div>


</div>

<script>
    var fot = new Vue({
        el: '#fot-info',
        data: {
            queryTime: today() + ' ' + currentTimeToSecond()
        }
    });

    var DateRange = new Vue({
        el: '#DateRangeControl',
        data: {
            type: 'date',
            startValue: today(),
            endValue: today()
        }
    });

    var Scale = new Vue({
        el: '#scale-control',
        data:{
            scale: '1'
        }
    });

    var TableData = new Vue({
        el: '#table-view',
        data: {
            StartTime: 0,
            EndTime: 0,
            Conditions: '',
            Rows: JSON.parse('[{"EqpID":"CC-PCU-01","CurState":"NST","detailState":{"5100":0,"5310":0,"5230":0,"5300":0,"5210":0,"4600":0,"5220":0,"1000":0,"4210":0,"4200":0,"6100":22368813.288519,"6110":0,"6120":0,"6130":0,"3000":0,"6140":0,"3100":0,"4100":0,"2000":0,"3200":0,"2100":0,"4300":0,"4000":0,"4110":0,"4310":0,"6000":0,"5000":0,"5110":0,"5120":0},"PR":0,"EN":0,"SB":0,"SD":0,"NS":22368813.288519,"PM":0,"PT":0,"UD":0,"UP":0,"HistoryStates":[{"StartTime":"1524636417956","EndTime":"1547005230633","E10State":"NST","EqpState":"6100","DurationSecond":22368813.288519}]}' +
                ',{"EqpID":"CC-POX-01","CurState":"NST","detailState":{"5100":0,"5310":0,"5230":0,"5300":0,"5210":0,"4600":0,"5220":0,"1000":0,"4210":0,"4200":0,"6100":22368813.288519,"6110":0,"6120":0,"6130":0,"3000":0,"6140":0,"3100":0,"4100":0,"2000":0,"3200":0,"2100":0,"4300":0,"4000":0,"4110":0,"4310":0,"6000":0,"5000":0,"5110":0,"5120":0},"PR":0,"EN":0,"SB":0,"SD":0,"NS":22368813.288519,"PM":0,"PT":0,"UD":0,"UP":0,"HistoryStates":[{"StartTime":"1524636417956","EndTime":"1547005230633","E10State":"NST","EqpState":"6100","DurationSecond":22368813.288519}]}]'),
            TotalSeconds: 0
        },
        computed: {
            RowEntities: {
                get: function () {
                    var entities = JSON.parse(JSON.stringify(this.Rows));
                    for (var i = 0; i < entities.length; i++) {
                        entities[i].PR = FixPerCent(entities[i].PR, this.TotalSeconds);
                        entities[i].SB = FixPerCent(entities[i].SB, this.TotalSeconds);
                        entities[i].EN = FixPerCent(entities[i].EN, this.TotalSeconds);
                        entities[i].SD = FixPerCent(entities[i].SD, this.TotalSeconds);
                        entities[i].UD = FixPerCent(entities[i].UD, this.TotalSeconds);
                        entities[i].NS = FixPerCent(entities[i].NS, this.TotalSeconds);
                        entities[i].PT = FixPerCent(entities[i].PT, this.TotalSeconds);
                        entities[i].PM = FixPerCent(entities[i].PM, this.TotalSeconds);
                        entities[i].UP = FixPerCent(entities[i].UP, this.TotalSeconds);
                    }
                    return entities;
                }
            },

            display: {
                get: function () {
                    var res = this.Conditions ? 'block' : 'none';
                    $('.show-later').css('display', res);
                    return res;
                }
            },

            scale: {
                get: function () {
                    var s = (this.EndTime - this.StartTime) / (1000 * 3600 * 24) > 2 ? 1 : 60;
                    Scale.scale = s;
                    return s;
                }
            }
        },

    });

    var HistoryData = new Vue({
        el: '#table-history-view',
        data: {
            EqpID: '',
            RowData: []
        },
        computed: {
            Rows: {
                get: function () {
                    var datas = JSON.parse(JSON.stringify(this.RowData));
                    for (var i = 0; i < datas.length; i++) {
                        var startInt = parseInt(datas[i].StartTime);
                        var endInt = parseInt(datas[i].EndTime);
                        datas[i].E10WithEqpState = datas[i].EqpState + '-' + datas[i].E10State;
                        datas[i].StartTime = fixCommonDateTimeValue(new Date(startInt));
                        datas[i].Duration = ((endInt - startInt) / (3600 * 1000)).toFixed(2);
                    }
                    return datas;
                }
            },
            display: {
                get: function () {
                    return this.EqpID ? 'block' : 'none';
                }
            }
        }
    });

    var detailData = new Vue({
        el: '#table-detail-view',
        data: {
            StartTime: '',
            EndTime:'',
            RawRows: [],
            TotalDurations:1
        },
        computed: {
            DetailTitles: {
                get: function () {

                    var titles = [];
                    if (this.RawRows.length > 0) {
                        for (var i in this.RawRows[0].detailState) {
                            titles.push(i);
                        }
                    }
                    return titles;
                }
            },

            Rows: {
                get: function () {
                    var rows = JSON.parse(JSON.stringify(this.RawRows));
                    for (var i = 0; i < rows.length; i++) {
                        rows[i].PR =Math.round( rows[i].PR*10000 / this.TotalDurations)/100;
                        rows[i].SB = Math.round(rows[i].SB *10000/ this.TotalDurations)/100;
                        rows[i].EN = Math.round(rows[i].EN *10000/ this.TotalDurations)/100;
                        rows[i].SD = Math.round (rows[i].SD *10000/ this.TotalDurations)/100;
                        rows[i].UD = Math.round(rows[i].UD *10000/ this.TotalDurations)/100;
                        rows[i].NS = Math.round(rows[i].NS *10000/ this.TotalDurations)/100;
                        rows[i].PT = Math.round(rows[i].PT *10000/ this.TotalDurations)/100;
                        rows[i].PM = Math.round (rows[i].PM *10000/ this.TotalDurations)/100;
                        rows[i].UP = Math.round(rows[i].UP * 10000 / this.TotalDurations) / 100;
                        for (var j in rows[i].detailState) {
                            rows[i].detailState[j] = Math.round(rows[i].detailState[j] * 10000 / this.TotalDurations) / 100;
                        }
                    }
                    return rows;
                }
            }
        }
    });

    $(document).ready(function () {
        $('.chosen-select').chosen({ width: "100%" });
        $('.dual_select').bootstrapDualListbox({
            selectorMinimalHeight: 160,
            showFilterInputs: false,
            infoText: false,
            nonSelectedListLabel: 'Available EqpType:',
            selectedListLabel: 'Selected EqpType:',
        });

        $('#selected-modules').change(function () {
            GetEqpTypeList();
        });

        $('input[type=radio][name=radio1]').change(function () {
            if (this.value == 'date') {
                $('#end-date').removeAttr('readonly');
                $('#start-date').removeAttr('readonly');
                if (!$('#end-date').val()) {
                    $('#end-date').val(today());
                }
            } else if (this.value == 'now') {
                $('#end-date').attr('readonly', 'readonly');
                $('#start-date').removeAttr('readonly');
            } else {
                $('#end-date').attr('readonly', 'readonly');
                $('#start-date').attr('readonly', 'readonly');
                var dt = new Date();
                var day = new Date().getDay();
                day = day == 0 ? 7 : day;
                var thisMonday = new Date(dt.setDate(dt.getDate() - day + 1));
                var lastMonday = new Date(dt.setDate(dt.getDate() - 7));
                DateRange.startValue = fixDatePickerValue(lastMonday);
                DateRange.endValue = fixDatePickerValue(thisMonday);
            }

        });

    });

    function GetEqpTypeList() {
        var url = "../ReqRpt020/GetEqpTypeByModule";
        var data = { module: checkselectoption("selected-modules") };
        PostAjaxGetHtml(data, url, function (responseData) {
            $('#select-eqptypes').html(responseData);
            $('.dual_select').bootstrapDualListbox('refresh');
        });
    }

    function Query() {
        var data = {
            StartTime: DateRange.startValue,
            EndTime: DateRange.endValue,
            EqpTypes: checkselect("bootstrap-duallistbox-selected-list_"),
            HasChamebr: $('#checkbox-chamber').is(':checked'),
            // HasLoadPort: $('#checkbox-loadport').is(':checked'),
            IsToNow: $('input[type=radio][name=radio1]:checked').val() == 'now' ? true : false,
        };
        var check = CheckDateRange(data);
        if (check != 'yes') { alert(check); return; }
        var url = "GetTableView";
        PostAjaxGetJson(data, url, function (reponseData) {
            //TableData = reponseData;
            TableData.Conditions = reponseData.Conditions;
            TableData.StartTime = parseInt(reponseData.StartTime);
            TableData.EndTime = parseInt(reponseData.EndTime);
            TableData.Rows = reponseData.Rows;
            TableData.TotalSeconds = reponseData.TotalSeconds;
            FormTables(TableData);
            $('#DataTables_Table_0').ready(function () {
                $('input[type=radio][name=radioRow]').click(function () {
                    var eqp = $("input[name='radioRow']:checked").val();
                    var Ctx = TableData.Rows.find(f => f.EqpID == eqp);
                    HistoryData.EqpID = eqp;
                    HistoryData.RowData = Ctx.HistoryStates;
                });
                //drawHistory
                for (var i = 0; i < TableData.Rows.length; i++) {
                    var history = [];
                    for (var item in TableData.Rows[i].HistoryStates) {
                        var member = TableData.Rows[i].HistoryStates[item];
                        var style = '';
                        if (member.E10State == 'PRD') style = 'green';
                        else if (member.E10State == 'SBY') style = 'yellow';
                        else if (member.E10State == 'ENG') style = 'blue';
                        else if (member.E10State == 'SDT') style = 'pink';
                        else if (member.E10State == 'UDT') style = 'red';
                        else if (member.E10State == 'NST') style = 'lightgray';
                        else style = 'black';
                        history.push({StartTime:member.StartTime,DurationSecond:member.DurationSecond,Style:style});
                    }
                    var rowData = {
                        startTime: TableData.StartTime,
                        totalSeconds: TableData.TotalSeconds,
                        historyStates: history,
                    };
                    var perData = {
                        totalSeconds: TableData.TotalSeconds,
                        PR: TableData.Rows[i].PR,
                        SB: TableData.Rows[i].SB,
                        EN: TableData.Rows[i].EN,
                        SD: TableData.Rows[i].SD,
                        UD: TableData.Rows[i].UD,
                        NS: TableData.Rows[i].NS
                    }

                    drawRow(rowData, document.getElementsByClassName('canvas-chartTime')[i]);
                    drawPercent(perData, document.getElementsByClassName('canvas-chartRate')[i]);
                }


            });
            detailData.StartTime = fixCommonDateTimeValue(new Date(TableData.StartTime));
            detailData.EndTime = fixCommonDateTimeValue(new Date(TableData.EndTime));
            detailData.TotalDurations = TableData.TotalSeconds;
            detailData.RawRows = reponseData.Rows;

        }, function () { });
    }

    function FormTables(tableData) {
        var myDrawTh = new drawTh(new Date(tableData.StartTime), new Date(tableData.EndTime), tableData.scale, document.getElementById('canvas-chartTime'));
        myDrawTh.draw();

    }

    function CheckDateRange(data) {
        if (!data.EqpTypes) return "请至少选择一个EqpType";
        var s = new Date(data.StartTime).getTime();
        var e = data.IsToNow ? new Date() : new Date(data.EndTime).getTime();
        var d = (e - s) / (24 * 3600 * 1000);
        if (d <= 0) {
            return "结束时间必须大于开始时间！";
        }
        if (d > 7) {
            return "时间区间不能大于一周时间"
        }
        return "yes";
    }

    function FixPerCent(num, total) {
        if (!total) return "";
        if (num == 0) return "";
        var res = Math.round(num * 100 / total);
        return res == 0 ? "<1" : res;
    }

    function ExportHistory() {
        var columns = ['No','Status','Change Comment','Start Time','Change User','Duration(Hrs)'];
        var rowDatas = HistoryData.Rows;
        var rows = [];
        var c = 0;
        for (var i = 0; i < rowDatas.length; i++) {
            if (IsRequired(rowDatas[i])) {
                c = c + 1;
                rows.push([c, rowDatas[i].E10WithEqpState,rowDatas[i].Claim_Memo,rowDatas[i].StartTime,rowDatas[i].Claim_User_ID,rowDatas[i].Duration]);
            }
        }
        if (c === 0) return false;
        var tableData = {
            columns: columns,
            rows: rows
        };
        var tableName = 'RTCHistory_' + HistoryData.EqpID + '.xls';
        FormExcelContext(tableData, 'Sheet1',tableName,'dlink')
    }

    function ExportDetail() {
        var columns = GetDetaiColumns();
        if (columns.length <= 1) return false;
        var rowDatas = detailData.Rows;
        var rows = [];
        for (var i = 0; i <rowDatas.length; i++) {
            row = GetOneRow(rowDatas[i]);
            rows.push(row);
        }
        var tableData = {
            columns: columns,
            rows: rows
        };
        tableName = 'Equipment_RTC_Detail.xls';
        FormExcelContext(tableData, 'Sheet1', tableName, 'dlink2')
    }

    function IsRequired(row) {
        var hasPr = $('#check-pr').is(':checked');
        var hasSb = $('#check-sb').is(':checked')
        var hasEn = $('#check-en').is(':checked');
        var hasSd = $('#check-sd').is(':checked');
        var hasUd = $('#check-ud').is(':checked');
        var hasNs = $('#check-ns').is(':checked');
        if (row.E10State == 'PRD' && hasPr) { return true; }
        if (row.E10State == 'SBY' && hasSb) { return true; }
        if (row.E10State == 'ENG' && hasEn) { return true; }
        if (row.E10State == 'SDT' && hasSd) { return true; }
        if (row.E10State == 'UDT' && hasUd) { return true; }
        if (row.E10State == 'NST' && hasNs) { return true; }
        return false;
    }

    function GetDetaiColumns() {
        var hasPr = $('#check-pr').is(':checked');
        var hasSb = $('#check-sb').is(':checked');
        var hasEn = $('#check-en').is(':checked');
        var hasSd = $('#check-sd').is(':checked');
        var hasUd = $('#check-ud').is(':checked');
        var hasNs = $('#check-ns').is(':checked');
        var hasPt = $('#check-pt').is(':checked');
        var hasPm = $('#check-pm').is(':checked');
        var hasUp = $('#check-up').is(':checked');
        var columns = ['EqpID'];
        if (hasPr) { columns.push('PR');}
        if (hasSb) { columns.push('SB'); }
        if (hasEn) { columns.push('EN'); }
        if (hasSd) { columns.push('SD'); }
        if (hasUd) { columns.push('UD'); }
        if (hasNs) { columns.push('NS'); }
        if (hasPt) { columns.push('PT'); }
        if (hasPm) { columns.push('PM'); }
        if (hasUp) { columns.push('UP'); }
        for (var i = 0; i < detailData.DetailTitles.length; i++) {
            if (hasPr && detailData.DetailTitles[i].substr(0, 1) == '1') { columns.push(detailData.DetailTitles[i]); }
            if (hasSb && detailData.DetailTitles[i].substr(0, 1) == '2') { columns.push(detailData.DetailTitles[i]); }
            if (hasEn && detailData.DetailTitles[i].substr(0, 1) == '3') { columns.push(detailData.DetailTitles[i]); }
            if (hasSd && detailData.DetailTitles[i].substr(0, 1) == '4') { columns.push(detailData.DetailTitles[i]); }
            if (hasUd && detailData.DetailTitles[i].substr(0, 1) == '5') { columns.push(detailData.DetailTitles[i]); }
            if (hasNs && detailData.DetailTitles[i].substr(0, 1) == '6') { columns.push(detailData.DetailTitles[i]); }
        }
        return columns;
    }

    function GetOneRow(rowData) {
        console.log(rowData);
        var row = [rowData.EqpID];
        var hasPr = $('#check-pr').is(':checked');
        var hasSb = $('#check-sb').is(':checked');
        var hasEn = $('#check-en').is(':checked');
        var hasSd = $('#check-sd').is(':checked');
        var hasUd = $('#check-ud').is(':checked');
        var hasNs = $('#check-ns').is(':checked');
        var hasPt = $('#check-pt').is(':checked');
        var hasPm = $('#check-pm').is(':checked');
        var hasUp = $('#check-up').is(':checked');
        if (hasPr) row.push(rowData.PR);
        if (hasSb) row.push(rowData.SB);
        if (hasEn) row.push(rowData.EN);
        if (hasSd) row.push(rowData.SD);
        if (hasUd) row.push(rowData.UD);
        if (hasNs) row.push(rowData.NS);
        if (hasPt) row.push(rowData.PT);
        if (hasPm) row.push(rowData.PM);
        if (hasUp) row.push(rowData.UP);
        for (var i in rowData.detailState) {
            if (hasPr && i.substr(0, 1) == '1') row.push(rowData.detailState[i]);
            if (hasSb && i.substr(0, 1) == '2') row.push(rowData.detailState[i]);
            if (hasEn && i.substr(0, 1) == '3') row.push(rowData.detailState[i]);
            if (hasSd && i.substr(0, 1) == '4') row.push(rowData.detailState[i]);
            if (hasUd && i.substr(0, 1) == '5') row.push(rowData.detailState[i]);
            if (hasNs && i.substr(0, 1) == '6') row.push(rowData.detailState[i]);
        }

        return row;
    }


    //仅适用于简单表格
    function FormExcelContext(tableData, sheetName, fileName, linkId) {
           var uri = 'data:application/vnd.ms-excel;base64,';
           var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel"' +
                'xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>'
                + '<x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets>'
                + '</x:ExcelWorkbook></xml><![endif]-->' +
                ' <style type="text/css">' +
                'table th td{' +
                'border-right: 1px solid #F00;' +
                'border - bottom: 1px solid #F00;' +
                'font - size: smaller;' +
                '}' +
                '</style>' +
                '</head><body ><table class="excelTable">{table}</table></body></html>';
        var tableHtml = "<table><thead><tr>";
        for (var i = 0; i < tableData.columns.length; i++) {
            tableHtml = tableHtml + '<th>' + tableData.columns[i] + '</th>';
        }
        tableHtml = tableHtml + '</tr></thead><tbody>';
        for (var i = 0; i < tableData.rows.length; i++) {
            tableHtml = tableHtml + '<tr>';
            for (var j = 0; j < tableData.rows[i].length; j++) {
                tableHtml = tableHtml + '<td>' + tableData.rows[i][j]+'</td>';
            }
            tableHtml = tableHtml + '</tr>';
        }
        tableHtml = tableHtml + '</tbody></table>';
       // console.log(tableHtml);
            var ctx = { worksheet: sheetName || 'Worksheet', table: tableHtml };
            var dlinkInfo = document.getElementById(linkId);
            dlinkInfo.href = uri + base64(format(template, ctx));
            dlinkInfo.download = fileName;
            dlinkInfo.click();
    }
</script>
